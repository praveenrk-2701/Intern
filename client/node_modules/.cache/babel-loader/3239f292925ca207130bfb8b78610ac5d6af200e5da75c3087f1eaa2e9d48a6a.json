{"ast":null,"code":"var _jsxFileName = \"/home/praveen/ICCmon-Frontend/client/src/pages/Twitter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./data.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Twitter() {\n  _s();\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    console.log('Initial data');\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/twet?search=${search}`);\n        const data = await response.json();\n        console.log('api called');\n        console.log(data);\n        setData(data);\n\n        // Map the data to options\n        const mappedOptions = data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.url\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this));\n        setOptions(mappedOptions);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [search]);\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        placeholder: \"search....\",\n        value: search,\n        onChange: event => handleSearch(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \"\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"my-dropdown\",\n        children: \"Choose an option:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"my-dropdown\",\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Twitter, \"hJmJMKlnpozdeFu5p6zFpIWVJNI=\");\n_c = Twitter;\nexport default Twitter;\nvar _c;\n$RefreshReg$(_c, \"Twitter\");","map":{"version":3,"names":["React","useState","useEffect","Twitter","data","setData","search","setSearch","options","setOptions","console","log","fetchData","response","fetch","json","mappedOptions","map","item","id","url","error","handleSearch","event","target","value"],"sources":["/home/praveen/ICCmon-Frontend/client/src/pages/Twitter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./data.css\";\n\nfunction Twitter() {\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState('');\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    console.log('Initial data')\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/twet?search=${search}`);\n        const data = await response.json();\n        console.log('api called')\n          console.log(data)\n        setData(data);\n\n        // Map the data to options\n        const mappedOptions = data.map((item) => (\n          <option key={item.id} value={item.id}>\n            {item.url}\n          </option>\n        ));\n        setOptions(mappedOptions);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [search]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  return (\n    <div>\n      <div className=\"search\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"search....\"\n          value={search}\n          onChange ={(event)=>handleSearch(event)}/>\n          &nbsp;\n      </div>\n      <div>\n        <label htmlFor=\"my-dropdown\">Choose an option:</label>\n        <select id=\"my-dropdown\">\n          {/* Render the options */}\n          {options}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default Twitter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC;AAEpB,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,MAAMC,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCR,MAAO,EAAC,CAAC;QAC/E,MAAMF,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAI,EAAE;QAClCL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACvBD,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;QACnBC,OAAO,CAACD,IAAI,CAAC;;QAEb;QACA,MAAMY,aAAa,GAAGZ,IAAI,CAACa,GAAG,CAAEC,IAAI,iBAClC;UAAsB,KAAK,EAAEA,IAAI,CAACC,EAAG;UAAA,UAClCD,IAAI,CAACE;QAAG,GADEF,IAAI,CAACC,EAAE;UAAA;UAAA;UAAA;QAAA,QAGrB,CAAC;QACFV,UAAU,CAACO,aAAa,CAAC;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDT,SAAS,EAAE;EACb,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMgB,YAAY,GAAGC,KAAK,IAAI;IAC5BhB,SAAS,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACrB;QACE,SAAS,EAAC,OAAO;QACjB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC,YAAY;QACxB,KAAK,EAAEnB,MAAO;QACd,QAAQ,EAAIiB,KAAK,IAAGD,YAAY,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,QAE9C;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,wBACE;QAAO,OAAO,EAAC,aAAa;QAAA,UAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAQ,eACtD;QAAQ,EAAE,EAAC,aAAa;QAAA,UAErBf;MAAO;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GArDQL,OAAO;AAAA,KAAPA,OAAO;AAuDhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}